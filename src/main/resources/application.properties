spring.datasource.url=jdbc:mysql://localhost:3306/elifood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Silenthill8.@


spring.jpa.show-sql=true


# este codigo informa ao Hibernate que ele deve usar o MySQL para a comunicacao com o banco de dados. 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


#CTLR+SHIFT+T PARA PESQUISAR AS CLASSES 

#configuracao do numero maximo de conexao
#spring.datasource.hikari.maximum-pool-size=5
#numero minimo de conexao
#spring.datasource.hikari.minimum-idle=3
#Tempo para que as conexaoes que passe do minimo e nao estiver em uso esperem ate fechar seu valor e em ms
#spring.datasource.hikari.idle-timeout=1000


spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#como fazer para que o ddl seja gerado em um arquivo, ai depois e so analisar e organizar e colar ele em uma version da flyway
#Ele so pode rodar uma vez 
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql



#Isso vai permitir que o spring lance uma excecao quando o cliente tentar passar uma propriedade que nao existe
spring.jackson.deserialization.fail-on-unknown-properties=true
#Essa vai permitir que o spring lance uma excecao quando a propriedade existe um jsong ignore
spring.jackson.deserialization.fail-on-ignored-properties=true	


#Em versoes mais antigas do spring e necessario adicionar esses dois para a exception NoResourceFoundException ser lancada para tratarmos ela
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.web.resources.add-mappings=false